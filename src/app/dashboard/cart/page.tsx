import { Metadata } from 'next';
import { cookies } from 'next/headers';

import { ItemCard } from '@/shopping-cart/components/ItemCard';
import type { Product } from '@/products/data/products';
import { products } from '@/products/data/products';

export const metadata: Metadata = {
  title: 'Cart Page',
  description: 'Generated by create next app',
};

interface ProductQuantity {
  product: Product;
  quantity: number;
}

const getProductQuantity = (cart: { [id: string]: number }): ProductQuantity[] => {
  const productsQuantity: ProductQuantity[] = [];

  for (const key in cart) {
    if (Object.prototype.hasOwnProperty.call(cart, key)) {
      const quantity = cart[key];

      const product = products.find((product) => product.id === key);

      if (product)
        productsQuantity.push({
          product,
          quantity,
        });
    }
  }

  return productsQuantity;
};

export default function CartPage() {
  const cookieStore = cookies();
  const cart = JSON.parse(cookieStore.get('cart')?.value ?? '{}');
  const productsQuantity = getProductQuantity(cart);

  return (
    <div className=''>
      <h1 className='text-5xl'>Products in cart</h1>
      <hr className='mb-2' />
      <div className='flex flex-col sm:flex-row gap-2 w-full'>
        <div className='flex flex-col gap-2  w-full sm:w-8/12'>
          {productsQuantity.map((productQuantity) => (
            <ItemCard
              key={productQuantity.product.id}
              product={productQuantity.product}
              quantity={productQuantity.quantity}
            />
          ))}
        </div>
      </div>
    </div>
  );
}
